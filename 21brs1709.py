# -*- coding: utf-8 -*-
"""21BRS1709.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZsfEvVpfrCAB5kQhpyBnEC2q-bilbsiL
"""

!pip install flask-ngrok

from flask import Flask, request, jsonify
from flask_ngrok import run_with_ngrok

app = Flask(__name__)
run_with_ngrok(app)  # Start ngrok when the app is run

@app.route('/bfhl', methods=['GET'])
def bfhl_get():
    # Hardcoded JSON response for GET request
    response = {
        "operation_code": 1
    }
    return jsonify(response), 200

@app.route('/bfhl', methods=['POST'])
def bfhl_post():
    try:
        # Extract the 'data' array from the JSON request
        data = request.json.get('data', [])

        # Basic input validation
        if not isinstance(data, list) or not all(isinstance(item, str) for item in data):
            return jsonify({"is_success": False, "error": "Invalid input format"}), 400

        # Static user details
        user_id = "john_doe_17091999"  # Replace with your specific user ID
        email = "john@xyz.com"          # Replace with your college email ID
        roll_number = "ABCD123"         # Replace with your college roll number

        # Separate numbers and alphabets from the data array
        numbers = [x for x in data if x.isdigit()]
        alphabets = [x for x in data if x.isalpha()]

        # Find the highest lowercase alphabet
        highest_lowercase_alphabet = sorted([x for x in alphabets if x.islower()], reverse=True)[:1]

        # Prepare the JSON response
        response = {
            "is_success": True,
            "user_id": user_id,
            "email": email,
            "roll_number": roll_number,
            "numbers": numbers,
            "alphabets": alphabets,
            "highest_lowercase_alphabet": highest_lowercase_alphabet
        }

        return jsonify(response), 200

    except Exception as e:
        # Exception handling
        return jsonify({"is_success": False, "error": str(e)}), 500

if __name__ == '__main__':
    app.run()

app.run()

# Install Node.js
!curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -
!sudo apt-get install -y nodejs

# Install Create-React-App globally
!npm install -g create-react-app

import os
os.chdir('frontend-app')

app_js_code = """
import React, { useState } from 'react';

function App() {
  const [jsonInput, setJsonInput] = useState('');
  const [response, setResponse] = useState(null);

  const handleInputChange = (e) => {
    setJsonInput(e.target.value);
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    try {
      const parsedData = JSON.parse(jsonInput);
      const res = await fetch('http://YOUR_NGROK_URL/bfhl', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(parsedData),
      });
      const data = await res.json();
      setResponse(data);
    } catch (error) {
      console.error('Error:', error);
      setResponse({ error: 'Invalid JSON input or server error' });
    }
  };

  return (
    <div className="App">
      <h1>Backend Processor</h1>
      <form onSubmit={handleSubmit}>
        <label>
          Enter JSON:
          <textarea
            value={jsonInput}
            onChange={handleInputChange}
            placeholder='{"data": ["A","C","z"]}'
          />
        </label>
        <button type="submit">Submit</button>
      </form>
      {response && (
        <div>
          <h2>Response:</h2>
          <pre>{JSON.stringify(response, null, 2)}</pre>
        </div>
      )}
    </div>
  );
}

export default App;
"""

# Write the code to App.js
with open('src/App.js', 'w') as f:
    f.write(app_js_code)

# Replace YOUR_NGROK_URL with the actual ngrok URL
ngrok_url = 'http://127.0.0.1:5000'  # Replace with actual URL

with open('src/App.js', 'r') as file:
    filedata = file.read()

# Replace the target string
filedata = filedata.replace('http://YOUR_NGROK_URL', ngrok_url)

# Write the changes back to the file
with open('src/App.js', 'w') as file:
    file.write(filedata)

!npm start

# Install ngrok
!pip install pyngrok

from pyngrok import ngrok

# Start a tunnel to the React app running on port 3000
public_url = ngrok.connect(port='3000')
print('React frontend URL:', public_url)